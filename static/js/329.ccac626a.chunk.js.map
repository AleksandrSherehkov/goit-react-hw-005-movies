{"version":3,"file":"static/js/329.ccac626a.chunk.js","mappings":"0RAGaA,EAAmB,SAAC,GAQ1B,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,OACAC,EAKI,EALJA,SACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,aACAC,EACI,EADJA,WAEA,OACE,4BACE,gBACEC,IAAKJ,EAAW,0CAAsCA,GAAgBK,EACtEC,IAAKT,KAEP,4BACE,4BACE,wBAAKA,KACL,yBAAG,YAAUI,SAEf,+BACGH,QADH,IACGA,OADH,EACGA,EAAQS,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OACX,wBAAcD,GAALC,EADE,OAIf,uBAAIV,KACJ,4BACE,yBAAG,kBACa,0BAAOG,QAEvB,yBAAG,gBACW,0BAAOC,eAM9B,E,UCrCYO,EAA6B,WACxC,OACE,4BACE,uBAAG,4BACH,2BACE,yBACE,UAAC,KAAD,CAASC,GAAG,OAAZ,WACE,SAAC,MAAD,IAAkB,cAGtB,yBACE,UAAC,KAAD,CAASA,GAAG,UAAZ,WACE,SAAC,MAAD,IAAkB,qBAM7B,E,UCkBD,EA3ByB,WAAO,IAAD,IACrBC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,iBAACH,QAAD,IAACA,GAAD,UAACA,EAAUI,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,KAE5D,GAAgCC,EAAAA,EAAAA,GAASC,EAAAA,GAAiBT,GAA1D,eAAOU,EAAP,KAAcC,EAAd,KAEA,OAFA,MAGS,SAACC,EAAA,EAAD,IAGLD,GACK,SAACE,EAAA,EAAD,CAAgBF,MAAOA,KAG9B,4BACE,UAAC,KAAD,CAAMZ,GAAIK,EAAoBU,QAA9B,WACE,SAAC,MAAD,IAAiB,cAGnB,SAAC9B,GAAD,UAAsB0B,KACtB,SAACZ,EAAD,KACA,SAAC,KAAD,MAGL,C","sources":["components/MovieDetailsItem/MovieDetailsItem.jsx","components/MovieDetalisAdditionalInfo/MovieDetalisAdditionalInfo.jsx","page/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport posterBg from 'services/poster1.jpg';\n\nexport const MovieDetailsItem = ({\n  title,\n  genres,\n  overview,\n  poster_path,\n  release_date,\n  vote_average,\n  vote_count,\n}) => {\n  return (\n    <div>\n      <img\n        src={poster_path ? `https://image.tmdb.org/t/p/w500/${poster_path}` : posterBg}\n        alt={title}\n      />\n      <div>\n        <div>\n          <h2>{title}</h2>\n          <p>release: {release_date}</p>\n        </div>\n        <ul>\n          {genres?.map(({ name, id }) => (\n            <li key={id}>{name}</li>\n          ))}\n        </ul>\n        <p>{overview}</p>\n        <div>\n          <p>\n            Vote average: <span>{vote_average}</span>\n          </p>\n          <p>\n            Vote count: <span>{vote_count}</span>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMovieDetailsItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  genres: PropTypes.array.isRequired,\n  overview: PropTypes.string.isRequired,\n  poster_path: PropTypes.string,\n  release_date: PropTypes.string.isRequired,\n  vote_average: PropTypes.number.isRequired,\n  vote_count: PropTypes.number.isRequired,\n};\n","import { FaChevronRight } from 'react-icons/fa';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieDetalisAdditionalInfo = () => {\n  return (\n    <div>\n      <p>Additional Information</p>\n      <ul>\n        <li>\n          <NavLink to=\"cast\">\n            <FaChevronRight /> Cast\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"reviews\">\n            <FaChevronRight /> Reviews\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport { ErrorIndicator } from 'components/ErrorIndicator/ErrorIndicator';\nimport { LoadingIndicator } from 'components/LoadingIndicator/LoadingIndicator';\nimport { useFetch } from 'hook/useFetch';\nimport { getMovieDetalis } from 'services/api/movieApi';\n\nimport { MovieDetailsItem } from 'components/MovieDetailsItem/MovieDetailsItem';\nimport { MovieDetalisAdditionalInfo } from 'components/MovieDetalisAdditionalInfo/MovieDetalisAdditionalInfo';\nimport { useRef } from 'react';\nimport { FaChevronLeft } from 'react-icons/fa';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location?.state?.from ?? '/');\n\n  const [movie, error, loading] = useFetch(getMovieDetalis, movieId);\n\n  if (loading) {\n    return <LoadingIndicator />;\n  }\n\n  if (error) {\n    return <ErrorIndicator error={error} />;\n  }\n  return (\n    <div>\n      <Link to={backLinkLocationRef.current}>\n        <FaChevronLeft />\n        Go back\n      </Link>\n      <MovieDetailsItem {...movie} />\n      <MovieDetalisAdditionalInfo />\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["MovieDetailsItem","title","genres","overview","poster_path","release_date","vote_average","vote_count","src","posterBg","alt","map","name","id","MovieDetalisAdditionalInfo","to","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useFetch","getMovieDetalis","movie","error","LoadingIndicator","ErrorIndicator","current"],"sourceRoot":""}