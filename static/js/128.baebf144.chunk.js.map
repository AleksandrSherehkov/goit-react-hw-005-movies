{"version":3,"file":"static/js/128.baebf144.chunk.js","mappings":"2UAEaA,EAAUC,EAAAA,GAAAA,IAAH,gFAMPC,EAASD,EAAAA,GAAAA,IAAH,yCAINE,EAAQF,EAAAA,GAAAA,GAAH,2IAOLG,EAAUH,EAAAA,GAAAA,EAAH,uHAOPI,EAAQJ,EAAAA,GAAAA,KAAH,2IAOLK,EAAeL,EAAAA,GAAAA,IAAH,4HAOZM,EAAgBN,EAAAA,GAAAA,GAAH,wGAObO,EAAaP,EAAAA,GAAAA,EAAH,2IAOVQ,EAAWR,EAAAA,GAAAA,EAAH,oKAQRS,EAAYT,EAAAA,GAAAA,KAAH,2IAOTU,EAAcV,EAAAA,GAAAA,GAAH,oG,SCpDXW,EAAmB,SAAC,GAQ1B,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,OACAC,EAKI,EALJA,SACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,aACAC,EACI,EADJA,WAEA,OACE,UAACnB,EAAD,YACE,SAACE,EAAD,CACEkB,IAAKJ,EAAW,0CAAsCA,GAAgBK,EACtEC,IAAKT,KAEP,4BACE,UAACP,EAAD,YACE,SAACH,EAAD,UAAQU,KACR,UAACT,EAAD,WAAS,aACE,SAACC,EAAD,UAAQY,EAAaM,MAAM,KAAKC,UAAUC,KAAK,cAG5D,SAAClB,EAAD,iBACGO,QADH,IACGA,OADH,EACGA,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OACX,yBACE,SAACpB,EAAD,UAAamB,KADNC,EADE,OAMf,SAACnB,EAAD,UAAWM,KACX,UAACJ,EAAD,YACE,UAACP,EAAD,WAAS,kBACO,SAACM,EAAD,UAAYQ,QAE5B,UAACd,EAAD,WAAS,gBACK,SAACM,EAAD,UAAYS,eAMnC,E,UCvDYnB,EAAUC,EAAAA,GAAAA,GAAH,qJASPE,EAAQF,EAAAA,GAAAA,GAAH,oTAeL4B,GAAa5B,EAAAA,EAAAA,IAAO6B,EAAAA,GAAP7B,CAAH,mVCvBV8B,EAA6B,WACxC,OACE,4BACE,SAAC,EAAD,UAAO,4BACP,UAAC,EAAD,YACE,yBACE,UAACF,EAAD,CAAYG,GAAG,OAAf,WACE,SAAC,MAAD,IAAkB,cAGtB,yBACE,UAACH,EAAD,CAAYG,GAAG,UAAf,WACE,SAAC,MAAD,IAAW,qBAMtB,ECnBYC,GAAahC,EAAAA,EAAAA,IAAO6B,EAAAA,GAAP7B,CAAH,geCuCvB,EA7ByB,WAAO,IAAD,IACrBiC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,iBAACH,QAAD,IAACA,GAAD,UAACA,EAAUI,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,KAE5D,GAAgCC,EAAAA,EAAAA,GAASC,EAAAA,GAAiBT,GAA1D,eAAOU,EAAP,KAAcC,EAAd,KAEA,OAFA,MAGS,SAACC,EAAA,EAAD,IAGLD,GACK,SAACE,EAAA,EAAD,CAAgBF,MAAOA,KAG9B,4BACE,UAACZ,EAAD,CAAYD,GAAIM,EAAoBU,QAApC,WACE,SAAC,MAAD,IAAU,cAIZ,SAACpC,GAAD,UAAsBgC,KACtB,SAACb,EAAD,KAEA,SAAC,KAAD,MAGL,C","sources":["components/MovieDetailsItem/MovieDetalisItem.styled.js","components/MovieDetailsItem/MovieDetailsItem.jsx","components/MovieDetalisAdditionalInfo/MovieDetalisAdditionalInfo.styled.js","components/MovieDetalisAdditionalInfo/MovieDetalisAdditionalInfo.jsx","page/MovieDetailsPage/MovieDetailsPage.styled.js","page/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 40px;\n`;\n\nexport const Poster = styled.img`\n  width: 300px;\n`;\n\nexport const Title = styled.h2`\n  font-size: 28px;\n  font-weight: bold;\n  text-shadow: 0px 3px 3px rgba(255, 255, 255, 0.5);\n  color: #0022cc;\n`;\n\nexport const Release = styled.p`\n  font-size: 16px;\n\n  text-shadow: 0px 3px 3px rgba(255, 255, 255, 0.5);\n  color: #504e61;\n`;\n\nexport const Value = styled.span`\n  font-size: 18px;\n  font-weight: bold;\n  text-shadow: 0px 3px 3px rgba(255, 255, 255, 0.5);\n  color: #504e61;\n`;\n\nexport const WrapperTitle = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const WrapperGenres = styled.ul`\n  display: flex;\n  gap: 40px;\n  align-items: center;\n  margin-bottom: 90px;\n`;\n\nexport const GanresName = styled.p`\n  font-size: 16px;\n  font-weight: bold;\n  text-shadow: 0px 3px 3px rgba(255, 255, 255, 0.5);\n  color: #504e61;\n`;\n\nexport const Overview = styled.p`\n  font-style: italic;\n  font-size: 18px;\n  text-shadow: 0px 3px 3px rgba(255, 255, 255, 0.5);\n  color: #504e61;\n  margin-bottom: 90px;\n`;\n\nexport const ValueVote = styled.span`\n  font-size: 18px;\n  font-weight: bold;\n  text-shadow: 0px 3px 3px rgba(255, 255, 255, 0.5);\n  color: #ff7733;\n`;\n\nexport const WrapperVote = styled.ul`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n`;\n","import PropTypes from 'prop-types';\n\nimport posterBg from 'services/poster1.jpg';\nimport {\n  GanresName,\n  Overview,\n  Poster,\n  Release,\n  Title,\n  Value,\n  ValueVote,\n  Wrapper,\n  WrapperGenres,\n  WrapperTitle,\n  WrapperVote,\n} from './MovieDetalisItem.styled';\n\nexport const MovieDetailsItem = ({\n  title,\n  genres,\n  overview,\n  poster_path,\n  release_date,\n  vote_average,\n  vote_count,\n}) => {\n  return (\n    <Wrapper>\n      <Poster\n        src={poster_path ? `https://image.tmdb.org/t/p/w500/${poster_path}` : posterBg}\n        alt={title}\n      />\n      <div>\n        <WrapperTitle>\n          <Title>{title}</Title>\n          <Release>\n            release: <Value>{release_date.split('-').reverse().join('-')}</Value>\n          </Release>\n        </WrapperTitle>\n        <WrapperGenres>\n          {genres?.map(({ name, id }) => (\n            <li key={id}>\n              <GanresName>{name}</GanresName>\n            </li>\n          ))}\n        </WrapperGenres>\n        <Overview>{overview}</Overview>\n        <WrapperVote>\n          <Release>\n            Vote average: <ValueVote>{vote_average}</ValueVote>\n          </Release>\n          <Release>\n            Vote count: <ValueVote>{vote_count}</ValueVote>\n          </Release>\n        </WrapperVote>\n      </div>\n    </Wrapper>\n  );\n};\n\nMovieDetailsItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  genres: PropTypes.array.isRequired,\n  overview: PropTypes.string.isRequired,\n  poster_path: PropTypes.string,\n  release_date: PropTypes.string.isRequired,\n  vote_average: PropTypes.number.isRequired,\n  vote_count: PropTypes.number.isRequired,\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 60px;\n  height: 40px;\n  background: #07a6ff;\n`;\n\nexport const Title = styled.h2`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 28px;\n  font-weight: bold;\n  text-shadow: 0px 3px 3px rgba(255, 255, 255, 0.5);\n  color: #504e61;\n\n  background-color: #d4d4d4;\n  margin-top: 20px;\n  padding-top: 10px;\n  background: #07a6ff;\n`;\n\nexport const CustomLink = styled(NavLink)`\n  font-size: 20px;\n  font-weight: 700;\n  color: #244157;\n  transition: color 250ms linear;\n  color: #696969;\n\n  text-shadow: -1px -1px 1px rgba(255, 255, 255, 0.1), 1px 1px 1px rgba(0, 0, 0, 0.5);\n  &.active {\n    text-decoration: underline;\n    color: white;\n  }\n\n  :hover {\n    color: #d1d1d1;\n  }\n`;\n","import { FcClapperboard, FcRules } from 'react-icons/fc';\n\nimport { CustomLink, Title, Wrapper } from './MovieDetalisAdditionalInfo.styled';\n\nexport const MovieDetalisAdditionalInfo = () => {\n  return (\n    <div>\n      <Title>Additional Information</Title>\n      <Wrapper>\n        <li>\n          <CustomLink to=\"cast\">\n            <FcClapperboard /> Cast\n          </CustomLink>\n        </li>\n        <li>\n          <CustomLink to=\"reviews\">\n            <FcRules /> Reviews\n          </CustomLink>\n        </li>\n      </Wrapper>\n    </div>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const LinkGoBack = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n\n  width: 100px;\n  height: 20px;\n  margin-bottom: 5px;\n  margin-top: 5px;\n  padding: 5px 0;\n  color: #504e61;\n\n  font-size: 14px;\n  font-weight: bold;\n\n  background-color: #07a6ff;\n\n  border: none;\n\n  cursor: pointer;\n  transition: background-color 250ms linear, color 250ms linear;\n\n  :hover {\n    background-color: #3888ff;\n    color: #c2c2c2;\n  }\n`;\n","import { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useRef } from 'react';\nimport { FcLeft } from 'react-icons/fc';\n\nimport { ErrorIndicator } from 'components/ErrorIndicator/ErrorIndicator';\nimport { LoadingIndicator } from 'components/LoadingIndicator/LoadingIndicator';\nimport { useFetch } from 'hook/useFetch';\nimport { getMovieDetalis } from 'services/api/movieApi';\n\nimport { MovieDetailsItem } from 'components/MovieDetailsItem/MovieDetailsItem';\nimport { MovieDetalisAdditionalInfo } from 'components/MovieDetalisAdditionalInfo/MovieDetalisAdditionalInfo';\nimport { LinkGoBack } from './MovieDetailsPage.styled';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location?.state?.from ?? '/');\n\n  const [movie, error, loading] = useFetch(getMovieDetalis, movieId);\n\n  if (loading) {\n    return <LoadingIndicator />;\n  }\n\n  if (error) {\n    return <ErrorIndicator error={error} />;\n  }\n  return (\n    <div>\n      <LinkGoBack to={backLinkLocationRef.current}>\n        <FcLeft />\n        Go back\n      </LinkGoBack>\n\n      <MovieDetailsItem {...movie} />\n      <MovieDetalisAdditionalInfo />\n\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["Wrapper","styled","Poster","Title","Release","Value","WrapperTitle","WrapperGenres","GanresName","Overview","ValueVote","WrapperVote","MovieDetailsItem","title","genres","overview","poster_path","release_date","vote_average","vote_count","src","posterBg","alt","split","reverse","join","map","name","id","CustomLink","NavLink","MovieDetalisAdditionalInfo","to","LinkGoBack","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useFetch","getMovieDetalis","movie","error","LoadingIndicator","ErrorIndicator","current"],"sourceRoot":""}